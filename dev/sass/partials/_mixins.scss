// Mixins

//--------------------------------------------------------------------
// RESPONSIVE BREAKPOINTS
//--------------------------------------------------------------------

// Create media queries using breakpoints defined in js/config.js

@mixin bp($breakpoint, $extras: false) {
	// Only if Responsive Layout
	@if $responsive == true {
		// Retrieves the value from the key
		$value: map-get($breakpoints, $breakpoint);
	 
		// If the key exists in the map
		@if $value != null {
			@if $extras {
				@media (min-width: $value) and ($extras) {
					@content;
				}
			}
			@else {
				@media (min-width: $value) {
					@content;
				}
			}
		}
	}
}

@mixin bpMax($breakpoint, $extras: false) {
	// Only if Responsive Layout
	@if $responsive == true {
		// Retrieves the value from the key
		$value: map-get($breakpoints, $breakpoint);
	 
		// If the key exists in the map
		@if $value != null {
			@if $extras {
				@media (max-width: $value) and ($extras) {
					@content;
				}
			}
			@else {
				@media (max-width: $value) {
					@content;
				}
			}
		}
	}
}

@mixin bpBetween($from, $to) {
	// Only if Responsive Layout
	@if $responsive == true {
		// Retrieves the value from the key
		$from: map-get($breakpoints, $from);
		$to: map-get($breakpoints, $to);
	 
		// If the key exists in the map
		@if $from and $to != null {
			// Prints a media query based on the value
			@media (min-width: $from) and (max-width: $to)	{
				@content;
			}
		}
	}
}

//--------------------------------------------------------------------
// CONTENT GRID
//--------------------------------------------------------------------

// Quickly generate a scaleable grid from a selection of elements

@mixin grid($numPerRow,$margin:10%) {
	width:(100% - ($margin * ($numPerRow - 1))) / $numPerRow;
	margin:0 $margin $margin 0;
	float:left;
	&:nth-child(#{$numPerRow}n)	{
		margin-right:0;
	}
	@include clearfix;
}